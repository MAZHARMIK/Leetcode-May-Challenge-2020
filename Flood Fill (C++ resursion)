class Solution {
public:
    void modify4Directionally(vector<vector<int>>& image, int sr, int sc, int newColor, int initial_color) {
        if(image[sr][sc] == initial_color) {
            image[sr][sc] = newColor;
        }

        if((sr+1 < image.size()) && image[sr+1][sc] != newColor) {
            if(image[sr+1][sc] == initial_color) {
                modify4Directionally(image, sr+1, sc, newColor, initial_color);
            }
        }
        if((sr-1 >= 0) && image[sr-1][sc] != newColor) {
            if(image[sr-1][sc] == initial_color) {
                modify4Directionally(image, sr-1, sc, newColor, initial_color);
            }
        }
        if((sc+1 < image[sr].size()) && image[sr][sc+1] != newColor) {
            if(image[sr][sc+1] == initial_color) {
                modify4Directionally(image, sr, sc+1, newColor, initial_color);
            }
        }
        if((sc-1 >= 0) && image[sr][sc-1] != newColor) {
            if(image[sr][sc-1] == initial_color) {
                modify4Directionally(image, sr, sc-1, newColor, initial_color);
            }
        }
        return;

    }
    
    vector<vector<int>> driver(vector<vector<int>>& image, int sr, int sc, int newColor) {
        if(image[sr][sc] == newColor)
            return image;
        int initial_color = image[sr][sc];
        modify4Directionally(image, sr, sc, newColor, initial_color);
        return image;
    }
    
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int newColor) {
        return driver(image, sr, sc, newColor);
    }
};
