class Solution {
public:
    int findJudge(int N, vector<vector<int>>& trust) {
        if(N==1)
			return 1;
        int trust_size = trust.size();
        int i;
        map<int, int> my_map;
        for (i=0; i<trust_size; i++) {
            if(my_map.count(trust[i][0])) {
                my_map[trust[i][0]] = -1;
            } else {
            	my_map.insert({trust[i][0], -1});
            }
            if(!my_map.count(trust[i][1])) {
                my_map.insert({trust[i][1], 1});
            } else if(my_map[trust[i][1]] != -1) {
                my_map[trust[i][1]]++;
            }
        }
        for(auto elem : my_map)
		{
			if(elem.second == (N-1))
				return elem.first;
		}
        return -1;
    }
};
