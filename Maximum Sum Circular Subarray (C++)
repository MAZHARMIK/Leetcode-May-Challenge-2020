class Solution {
public:
    int maxSubarraySumCircular(vector<int>& A) {
        //variables: kadane's for max_sum
        int maxSum = A[0];
        int sum_max = A[0];

        //variables: kadane's for min_sum
        int minSum  = A[0];
        int sum_min = A[0];

        //Total Sum
        int total_sum = A[0];
        for(int i = 1; i< A.size(); i++){
            sum_max = max(sum_max+A[i], A[i]);
            maxSum = max(sum_max, maxSum);

            sum_min = min(sum_min+A[i], A[i]);
            minSum  = min(sum_min, minSum);

            total_sum += A[i];
        }
        int circular_max_sum = (total_sum - minSum);
        if(circular_max_sum > maxSum && circular_max_sum != 0)
            return circular_max_sum;
        return maxSum;
    }
};
