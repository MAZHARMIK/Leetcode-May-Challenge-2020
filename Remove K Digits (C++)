class Solution {
public:
    string removeKdigits(string num, int k) {
     int length = num.length();
    if(length == 0)
        return "";
    if(length == k)
        return "0";
    stack<char> my_stack;
    my_stack.push(num[0]);
    int i = 1;
    for(;i <length && k; i++) {
        int num_top  = my_stack.top() - 48;
        int next_num = num[i] - 48;
        while(next_num < num_top && k>0){
            my_stack.pop();
            k--;
            if(my_stack.empty())
                break;
            num_top = my_stack.top() - 48;
        }
        my_stack.push(num[i]);
    }
    while(i < length) {
        my_stack.push(num[i]);
        i++;
    }
    while(k>0) {
        my_stack.pop();
        k--;
    }

    string temp_result = "";
    while (!my_stack.empty()) {
        temp_result += my_stack.top();
        my_stack.pop();
    }
    reverse(temp_result.begin(), temp_result.end());
    //we also have to remove leading '0's

    int j = 0;
    while(temp_result[j]=='0'){
        j++;
    }
    temp_result.erase(0, j);
    if(temp_result=="")
        return "0";

    return temp_result;
    }
};
