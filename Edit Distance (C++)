class Solution {
public:
    int editDistance(string word1, string word2){
        vector<vector<int>> t(word1.length()+1, vector<int>(word2.length()+1));
        
        for(int i = 0; i<word1.length()+1; i++){
            for(int j = 0; j<word2.length()+1; j++){
                if(i == 0)
                    t[i][j] = j;
                if(j == 0)
                    t[i][j] = i;
            }
        }
        
         for(int i = 1; i<word1.length()+1; i++){
            for(int j = 1; j<word2.length()+1; j++){
                if(word1[i-1] == word2[j-1]){
                    t[i][j] = t[i-1][j-1];
                } else{
                    t[i][j] = 1 + min(t[i][j-1], min(t[i-1][j-1], t[i-1][j]));
                }
            }
        }
        return t[word1.length()][word2.length()];
    }
        
    
    int minDistance(string word1, string word2) {
        int size1 = word1.size();
        int size2 = word2.size();
        if(size1 == 0)
            return size2;
        
        return editDistance(word1, word2);
    }
};
