/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> my_vec;
    void getInorder(struct TreeNode* node) 
    { 
        if(!node)
            return;
        getInorder(node->left); 
        my_vec.push_back(node->val);
        getInorder(node->right);
    } 
    
    int kthSmallest(TreeNode* root, int k) {
        if(!root)
            return -1;
        getInorder(root);
        return my_vec[k-1];
            
    }
};
