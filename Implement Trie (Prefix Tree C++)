class Trie {
public:
    bool wordEnd;
    Trie* children[26];
    /** Initialize your data structure here. */
    Trie() {
        this->wordEnd = false;
        for(int i = 0; i<26; i++)
            this->children[i] = NULL;
    }
    
    /** Inserts a word into the trie. */
    void insert(string word) {
        Trie* pcrawl = this;
        for(char ch:word) {
            int idx = ch - 'a';
            if(pcrawl->children[idx] == NULL)
                pcrawl->children[idx] = new Trie();
            pcrawl = pcrawl->children[idx];
        }
        pcrawl->wordEnd = true;
    }
    
    /** Returns if the word is in the trie. */
    bool search(string word) {
        Trie* pcrawl = this;
        for(char ch:word) {
            int idx = ch - 'a';
            if(pcrawl->children[idx] == NULL)
                return false;
            pcrawl = pcrawl->children[idx];
        }
        
        return (pcrawl != NULL && pcrawl->wordEnd == true);
    }
    
    /** Returns if there is any word in the trie that starts with the given prefix. */
    bool startsWith(string prefix) {
        Trie* pcrawl = this;
        for(char ch:prefix) {
            int idx = ch - 'a';
            if(pcrawl->children[idx] == NULL)
                return false;
            pcrawl = pcrawl->children[idx];
        }
        return true;
    }
};
