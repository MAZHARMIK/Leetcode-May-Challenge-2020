class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        //if there is no node or only one node
        if(!head || !(head->next))
            return head;
        
        ListNode* head1 = head->next;
        ListNode* odd = head;
        ListNode* even = head1;
        while(even->next) {
            odd->next = even->next;
            even->next = even->next->next;
            odd = odd->next;
            even = even->next;
            if(!even)break;
        }
        odd->next = head1;
        return head;
    }
};
